[{"path":[]},{"path":"/articles/CellTopic_analysis.html","id":"load-data","dir":"Articles","previous_headings":"SpaTopic","what":"Load data","title":"CellTopic analysis","text":"","code":"library(Seurat) library(SpaTopic) library(ggplot2) library(ggforce) library(cowplot) library(tidyverse) library(pheatmap) my_colors <- c(\"#66b803\", \"#E5AA9B\", \"#FABD3E\", \"#2B8CBE\", \"#DE77AE\", \"#9970AB\", \"gray\", \"#D5E4A2\", \"#71D0F5\", \"#B1746F\", \"#ADE2D0\", \"#20DE8BFF\", \"#CCDE8BFF\", \"#FFDE8BFF\", \"#FFA88BFF\", \"#FF6A8BFF\") load(\"vignette_data/HCC_1L_obj.rda\") load(\"vignette_data/HCC_1L_spot_celltype.rda\")"},{"path":"/articles/CellTopic_analysis.html","id":"cluster","dir":"Articles","previous_headings":"SpaTopic","what":"cluster","title":"CellTopic analysis","text":"use clustering method ‘Seurat’, parameters follows, data processed SCTransform.","code":"HCC_1L_obj <- RunPCA(HCC_1L_obj, assay = \"SCT\", verbose = FALSE) HCC_1L_obj <- FindNeighbors(HCC_1L_obj, reduction = \"pca\", dims = 1:30) HCC_1L_obj <- FindClusters(HCC_1L_obj, resolution = 1.5) HCC_1L_obj <- RunUMAP(HCC_1L_obj, reduction = \"pca\", dims = 1:30) Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck  Number of nodes: 2791 Number of edges: 103726  Running Louvain algorithm... Maximum modularity in 10 random starts: 0.7420 Number of communities: 16 Elapsed time: 0 seconds"},{"path":"/articles/CellTopic_analysis.html","id":"celltopic","dir":"Articles","previous_headings":"SpaTopic","what":"CellTopic","title":"CellTopic analysis","text":"","code":"HCC_1L_spot_clusters <- HCC_1L_obj@meta.data[\"seurat_clusters\"] result_list <- CellTopic(   HCC_1L_spot_celltype,   HCC_1L_spot_clusters,   cluster = \"seurat_clusters\",   num_topics = 10,   percent = 0.7 ) HCC_1L_obj <- AddMetaData(HCC_1L_obj, result_list[[\"CellTopic\"]]) SpatialDimPlot(HCC_1L_obj, group.by = \"CellTopic\", image.alpha = 0, pt.size.factor = 2.2) + scale_fill_manual(values = my_colors) SpatialDimPlot(HCC_1L_obj, alpha = 0) + theme(legend.position = \"none\")"},{"path":"/articles/CellTopic_analysis.html","id":"special-spatial-domain","dir":"Articles","previous_headings":"","what":"Special spatial domain","title":"CellTopic analysis","text":"SpaTopic can combine cell types spatial location CellTopics analyze certain specialized spatial tissue structures cancer, Tertiary Lymphoid Structures (TLSs) tumor boundary. can see slice divided 15 CellTopics, CellTopics 1, 2, 4, 5 belong cancer regions, main cell types epithelial cells.  CellTopic8 mainly represents tumor boundary, major cell types include fibroblast cells, pDC cells B cells.  Additionally, CellTopic 7 found paraneoplastic region, predominantly consisting plasmacytoid dendritic cells (pDCs), B cells, myeloid cells. right, observe scoring spots using “TLS50” gene set, considered gene signature identification TLSs.","code":"CellTopic_plot(HCC_1L_obj,                 celltype_topic = result_list[[\"celltype_topic\"]],                 celltopic = paste0(\"CellTopic\", c(1,2,4,5)),                cols.highlight = c(\"#DE2D26\", \"#FEE0D2\"),                cols.celltype = my_colors,                 pt.size.factor = 2.2) CellTopic_plot(HCC_1L_obj,                 celltype_topic = result_list[[\"celltype_topic\"]],                 celltopic = \"CellTopic8\",                 cols.highlight = c(\"#DE2D26\", \"#FEE0D2\"),                cols.celltype = my_colors,                pt.size.factor = 2.2) CellTopic_plot(HCC_1L_obj,                 celltype_topic = result_list[[\"celltype_topic\"]],                 celltopic = \"CellTopic7\",                 cols.highlight = c(\"#DE2D26\", \"#FEE0D2\"),                cols.celltype = my_colors,                 highlight.circle = \"isTLS\",                pt.size.factor = 2.2) SpatialFeaturePlot(HCC_1L_obj, features = \"scores\", pt.size.factor = 2.2, image.alpha = 0) + ggtitle(\"TLS50\")"},{"path":[]},{"path":"/articles/CellTopic_analysis.html","id":"load-data-1","dir":"Articles","previous_headings":"Meta analysis","what":"Load data","title":"CellTopic analysis","text":"Presented meta-analysis CellTopic-celltypes data derived four primary colorectal cancer cases well two corresponding metastatic liver cancer instances. Initially, calculate correlation among CellTopics. Based complete clustering outcomes, identify CellTopics comprise similar cell types subsequently define clusters MetaTopics.  Utilizing Wilcoxon test, discerned cell types exhibit high expression MetaTopic. heatmap displays mean expression cell type within MetaTopic, p-values indicating significance differences expression levels.","code":"load(\"vignette_data/Meta_CellTopic.rda\") Meta_CellTopic[1:5,1:5] C1_CellTopic1 C1_CellTopic2 C1_CellTopic3 C1_CellTopic4 T01_cycling_TNK      0.01354725   0.022351251   0.022554421   0.017575393 B07_plasma_PPIB      0.02185837   0.018740898   0.018035048   0.006827589 M02_Mac_CXCL9        0.02372333   0.006066737   0.008488789   0.009032274 M08_cycling_MKI67    0.01309684   0.013551056   0.022641684   0.016111530 B04_plasma_IGHG2     0.03035225   0.009415768   0.005488518   0.008393596                   C1_CellTopic5 T01_cycling_TNK     0.016782494 B07_plasma_PPIB     0.023410894 M02_Mac_CXCL9       0.006921123 M08_cycling_MKI67   0.022835434 B04_plasma_IGHG2    0.024964639 corr <- round(cor(Meta_CellTopic), 3) p <- pheatmap(corr,          border_color = \"black\",          scale = \"none\",           cluster_rows = T,          cluster_cols = T,          legend = TRUE,          show_rownames = T,          show_colnames = T,          fontsize = 8,           cutree_rows = 7,          cutree_cols = 7 ) library(reshape2) row_cluster <- cutree(p$tree_row,k=7) %>% as.data.frame() colnames(row_cluster) <- \"cluster\" row_cluster$cluster <- paste0(\"M\", row_cluster$cluster) row_cluster$sample <- gsub(\"_.*\", \"\", rownames(row_cluster))  Meta_CellTopic_cluster <- merge(as.data.frame(t(Meta_CellTopic)), row_cluster, by = 0) Meta_CellTopic_cluster_long <- melt(Meta_CellTopic_cluster, id.vars = c(\"cluster\", \"Row.names\", \"sample\")) colnames(Meta_CellTopic_cluster_long) <- c(\"cluster\", \"CellTopic\", \"sample\", \"celltype_min\", \"value\") Meta_CellTopic_cluster_long$CellTopic <- as.character(Meta_CellTopic_cluster_long$CellTopic) Meta_CellTopic_cluster_long$celltype_min <- as.character(Meta_CellTopic_cluster_long$celltype_min) df <- Meta_CellTopic_cluster_long %>%    group_by(cluster, celltype_min) %>%   summarise(mean = mean(value, na.rm=T)) %>%   spread(celltype_min, mean) %>%   column_to_rownames(var = \"cluster\")  [1m [22m`summarise()` has grouped output by 'cluster'. You can override using the `.groups` argument. df_p <- unique(Meta_CellTopic_cluster_long$celltype_min) %>% as.data.frame() %>% column_to_rownames(var = \".\") ct_n <- 1 for(ct in unique(Meta_CellTopic_cluster_long$celltype_min)){   all <- Meta_CellTopic_cluster_long %>% subset(celltype_min == ct)   cls_n <- 1     for(cls in unique(Meta_CellTopic_cluster_long$cluster)){       select <- Meta_CellTopic_cluster_long %>% subset(celltype_min == ct & cluster == cls)       p <- wilcox.test(select$value, all$value, alternative = \"greater\")       p <- p$p.value       df_p[ct_n,cls_n] <- p       cls_n <- cls_n + 1     }   ct_n <- ct_n + 1 } colnames(df_p) <- unique(Meta_CellTopic_cluster_long$cluster)  df_pp <- df_p %>% t() df_pp_cluster <- apply(df_pp, 2, function(x){ifelse(min(x) <= 0.05, return(which.min(x)), return(\"none\"))}) %>%    as.data.frame() df_pp_cluster_name <- rownames(df_pp_cluster)[order(df_pp_cluster$.)] df_pp <- df_pp[,df_pp_cluster_name] df_pp_cluster <- apply(df_pp, 2, function(x){ifelse(min(x) <= 0.05, return(which.min(x)), return(\"none\"))}) %>%    as.data.frame() df_pp_cluster$. <- as.character(df_pp_cluster$.) colnames(df_pp_cluster) <- \"high in MetaTopics\" mycolor <- c(\"#f94144\", \"#f8961e\", \"#f7f31c\", \"#77bb43\", \"#429f9c\", \"#3574b8\", \"#bb3892\", \"grey\") names(mycolor) <- c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"none\") df[,df_pp_cluster_name] %>% t() %>%   pheatmap(border_color = \"black\", scale = \"none\", legend = TRUE,      cellwidth = 15, cellheight = 15,     cluster_rows = F, cluster_cols = F,      show_rownames = T, show_colnames = T,     fontsize = 8, fontsize_number = 9, number_color = \"black\",      display_numbers = t(matrix(ifelse(df_pp <= 0.05, ifelse(df_pp <= 0.01, \"***\", \"*\"), \"\"), nrow(df_pp))),     gaps_row = c(9,16,21,25,34,45,56),     annotation_row = df_pp_cluster,     annotation_colors = list(`high in MetaTopics` = mycolor),     angle_col = 90   )"},{"path":"/articles/CellTopic_analysis.html","id":"cell-cell-communication","dir":"Articles","previous_headings":"","what":"Cell-Cell communication","title":"CellTopic analysis","text":"can delve deeper complexities tumor microenvironment analyzing communication among different CellTopics. Employ CellChat tool elucidate dynamics cell communication across spatial domains.","code":""},{"path":"/articles/CellTopic_analysis.html","id":"load-data-2","dir":"Articles","previous_headings":"Cell-Cell communication","what":"load data","title":"CellTopic analysis","text":"Communication different spatial domains perspective pathway.","code":"data(\"spot_celltype\") data(\"spot_clusters\") load(\"vignette_data/PDAC_obj.rda\") result_list <- CellTopic(spot_celltype, spot_clusters, cluster = \"spatial.cluster\", num_topics = 13) PDAC_obj <- AddMetaData(PDAC_obj, result_list[[\"CellTopic\"]]) library(CellChat) # Create cellchat object data.input <- GetAssayData(PDAC_obj, assay = \"Spatial\", slot = \"data\") identity = data.frame(group =PDAC_obj$CellTopic, row.names = names(PDAC_obj$CellTopic)) cellchat <- createCellChat(object = data.input, meta = identity, group.by = \"group\") # Selective ligand receptor database cellchat@DB <- CellChatDB.human cellchat <- subsetData(cellchat) # Calculation cellchat <- identifyOverExpressedGenes(cellchat) cellchat <- identifyOverExpressedInteractions(cellchat) cellchat <- projectData(cellchat, PPI.human) #cellchat <- filterCommunication(cellchat, min.cells = 10) # Do not filter spot cellchat <- computeCommunProb(cellchat, raw.use = FALSE, population.size = TRUE) cellchat <- computeCommunProbPathway(cellchat) df.net <- subsetCommunication(cellchat) [1] \"Create a CellChat object from a data matrix\" Set cell identities for the new CellChat object  The cell groups used for CellChat analysis are  CellTopic1 CellTopic2 CellTopic3 CellTopic4  triMean is used for calculating the average gene expression per cell group.  [1] \">>> Run CellChat on sc/snRNA-seq data <<< [2024-06-08 17:26:12.582667]\" [1] \">>> CellChat inference is done. Parameter values are stored in `object@options$parameter` <<< [2024-06-08 17:26:54.896009]\" df.netp <- subsetCommunication(cellchat, slot.name = \"netP\") df.netp$sTot <- paste0(df.netp$source, \" -> \", df.netp$target) df.netp <- subset(df.netp, sTot %in% c(\"CellTopic1 -> CellTopic1\",\"CellTopic1 -> CellTopic2\",\"CellTopic1 -> CellTopic3\",\"CellTopic1 -> CellTopic4\",\"CellTopic2 -> CellTopic1\",\"CellTopic3 -> CellTopic1\",\"CellTopic4 -> CellTopic1\",\"CellTopic2 -> CellTopic4\",\"CellTopic4 -> CellTopic2\",\"CellTopic2 -> CellTopic2\",\"CellTopic3 -> CellTopic3\",\"CellTopic4 -> CellTopic4\")) df.netp$sTot <- factor(df.netp$sTot,levels = c(\"CellTopic2 -> CellTopic4\",\"CellTopic4 -> CellTopic2\",\"CellTopic1 -> CellTopic2\",\"CellTopic2 -> CellTopic1\",\"CellTopic1 -> CellTopic3\",\"CellTopic3 -> CellTopic1\",\"CellTopic1 -> CellTopic4\",\"CellTopic4 -> CellTopic1\",\"CellTopic1 -> CellTopic1\",\"CellTopic2 -> CellTopic2\",\"CellTopic3 -> CellTopic3\",\"CellTopic4 -> CellTopic4\")) df.netp <- rbind(df.netp, data.frame(     source = c(NA,NA,NA),      target = c(NA,NA,NA),      pathway_name = c(\"VTN\",\"VTN\",\"VTN\"), # It's just for showing the parts without communication, \"VTN\" has no particularity.     prob = c(0,0,0),      pval = c(NA,NA,NA),      sTot = c(\"CellTopic1 -> CellTopic2\",\"CellTopic2 -> CellTopic1\",\"CellTopic3 -> CellTopic1\"))) library('RColorBrewer') ggplot(df.netp, aes(x=sTot, y=pathway_name)) +      geom_point(aes(size=pval, color=log10(prob))) +      scale_size(range = c(4, 2), breaks = c(0.01,max(df.netp$pval[!is.na(df.netp$pval)])), labels = c(\"p<0.01\",\"0.01<p<0.05\")) +      scale_colour_distiller(palette=\"Spectral\", labels = c(\"low\",\"high\"), breaks = c(log10(min(df.netp$prob[df.netp$prob!=0])),log10(max(df.netp$prob)))) +     theme_bw() +     theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),     axis.title.x = element_blank(),     axis.title.y = element_blank()) +     labs(size = \"p-value\", color = \"Commun.prob\")"},{"path":"/articles/Quick_start.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"Quick start","text":"SpaTopic requires two inputs: spot_celltype: result deconvolution single-cell spatial transcriptome data, matrix rows spots columns cell types.* spot_clusters: dataframe spot domain information.* like *data used CARD (spot_celltype) BayesSpace (spot_clusters).","code":"data(\"spot_celltype\") data(\"spot_clusters\") head(spot_celltype) Acinar_cells Ductal_cells Cancer_clone_A Cancer_clone_B         DCs 10x10 5.838572e-02    0.2349066   1.365076e-03   3.892868e-04 0.165860789 10x13 4.807943e-05    0.9984677   1.654640e-06   9.032885e-06 0.001244634 10x14 4.701190e-02    0.8373601   4.846860e-03   9.009235e-04 0.003541947 10x15 5.047613e-02    0.8020465   1.911570e-04   3.325224e-02 0.084113110 10x16 4.694120e-03    0.9718078   1.719378e-06   6.266388e-04 0.007665514 10x17 6.850619e-02    0.7737652   1.034929e-02   5.242836e-02 0.030090839         Tuft_cells         pDCs Endocrine_cells Endothelial_cells  Macrophages 10x10 1.149557e-02 5.750904e-05    3.794494e-03      1.554314e-01 7.575614e-02 10x13 1.411944e-04 2.179189e-08    2.791803e-08      2.522234e-08 4.952721e-05 10x14 2.430843e-05 6.745099e-05    7.014669e-08      9.208190e-03 3.539390e-02 10x15 3.087975e-07 2.387285e-04    1.660241e-07      3.787078e-04 1.868701e-02 10x16 2.859347e-07 1.835252e-04    9.321908e-09      1.535896e-04 2.258778e-05 10x17 7.639672e-04 1.963630e-04    1.888457e-04      2.610257e-03 1.254141e-03         Mast_cells T_cells_._NK_cells    Monocytes         RBCs  Fibroblasts 10x10 1.335059e-07       1.419896e-05 6.324585e-05 6.935704e-08 2.924798e-01 10x13 2.560977e-08       8.100230e-10 2.999011e-05 4.812122e-06 3.255235e-06 10x14 7.319528e-06       2.780869e-06 8.047062e-04 7.357054e-06 6.082224e-02 10x15 9.115675e-07       2.629728e-06 4.568320e-04 2.846073e-05 1.012715e-02 10x16 6.924793e-07       2.044994e-05 1.654387e-06 1.444002e-09 1.482138e-02 10x17 4.102771e-06       1.894866e-04 6.179414e-04 3.425166e-06 5.903159e-02 head(spot_clusters) row col sizeFactor cluster.init spatial.cluster 10x10  10  10  4.7761108            1               2 10x13  10  13  1.0052199            2               2 10x14  10  14  0.8106812            2               2 10x15  10  15  0.4987377            2               2 10x16  10  16  0.4346143            2               2 10x17  10  17  0.7446991            2               2"},{"path":"/articles/Quick_start.html","id":"about-data","dir":"Articles","previous_headings":"Load data","what":"About data","title":"Quick start","text":"corresponding Seurat object data can also obtained GEO. (Data used processed SCTransform) spot_celltype spot_clusters based .","code":"load(\"vignette_data/PDAC_obj.rda\") PDAC_obj <- AddMetaData(PDAC_obj, spot_clusters[\"spatial.cluster\"]) DimPlot(PDAC_obj, group.by = 'spatial.cluster', reduction = \"umap\",cols = my_colors) SpatialDimPlot(PDAC_obj, label = FALSE, group.by = \"spatial.cluster\", pt.size.factor = 8) + scale_fill_manual(values = my_colors)"},{"path":"/articles/Quick_start.html","id":"simply-usage","dir":"Articles","previous_headings":"","what":"Simply usage","title":"Quick start","text":"Enter deconvolution result spot_celltype grouping information spot spot_clusters get result_list : CellTopic dataframe can add Seurat object. domain_topic dataframe, row CellTopics col domains. celltype_topic dataframe, row cell types col CellTopics. Cell_topic vector topic can chosen CellTopic. subsequent analyses, CellTopic celltype_topic mainly used.","code":"result_list <- CellTopic(   spot_celltype,   spot_clusters,   cluster = \"spatial.cluster\",   num_topics = 13 )"},{"path":"/articles/Quick_start.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"Quick start","text":"can add results CellTopic meta.data Seurat object AddMetaData Seurat, display spatial position CellTopics SpatialDimPlot Seurat.  CellTopic_plot can used display spatial location cell type one CellTopics time. Please use Seurat object CellTopic added meta.data celltype_topic dataframe result list FindCellTopic (CellTopic) function input.","code":"PDAC_obj <- AddMetaData(PDAC_obj, result_list[[\"CellTopic\"]]) SpatialDimPlot(PDAC_obj, group.by = \"CellTopic\",pt.size.factor = 8) CellTopic_plot(PDAC_obj,                 celltype_topic = result_list[[\"celltype_topic\"]],                 cols.highlight = c(\"#DE2D26\", \"#FEE0D2\"),                cols.celltype = my_colors,                 pt.size.factor = 8)"},{"path":"/articles/Quick_start.html","id":"optional-parameters","dir":"Articles","previous_headings":"","what":"Optional parameters","title":"Quick start","text":"recommend value num_topics generally slightly larger group number spots. larger percent, dependent results deconvolution. recommend using value 0.5-0.9.","code":"result_list <- CellTopic(   spot_celltype,   spot_clusters,   cluster = \"spatial.cluster\",   num_topics = 13,   percent = 0.7 )"},{"path":"/articles/Quick_start.html","id":"another-strategy","dir":"Articles","previous_headings":"Optional parameters","what":"Another strategy","title":"Quick start","text":"want focus less percentages information carried single topic, can use Binarization = TRUE .","code":"result_list <- CellTopic(   spot_celltype,   spot_clusters,   cluster = \"spatial.cluster\",   num_topics = 13,   Binarization = TRUE ) PDAC_obj <- AddMetaData(PDAC_obj, result_list[[\"CellTopic\"]]) CellTopic_plot(PDAC_obj,                 celltype_topic = result_list[[\"celltype_topic\"]],                 cols.highlight = c(\"#DE2D26\", \"#FEE0D2\"),                cols.celltype = my_colors,                 pt.size.factor = 8)"},{"path":"/articles/Quick_start.html","id":"meta-topic","dir":"Articles","previous_headings":"Optional parameters","what":"Meta Topic","title":"Quick start","text":"want explore different spatial domains based cell type CellTopic, provide simple clustering option, meta.cell = TRUE. Parameter k integer number MetaTopics. Hierarchical clustering algorithm used default","code":"result_list <- CellTopic(   spot_celltype,   spot_clusters,   cluster = \"spatial.cluster\",   num_topics = 13,   percent = 0.7,   meta.cell = TRUE,   k = 3 ) head(result_list[[\"MetaTopic\"]]) MetaCluster CellTopic1           1 CellTopic2           1 CellTopic3           2 CellTopic4           3"},{"path":"/articles/SimplyUsage.html","id":"data-input","dir":"Articles","previous_headings":"","what":"Data input","title":"Simply usage","text":"SpaTopic requires two inputs: spot_celltype: result deconvolution single-cell spatial transcriptome data, matrix rows spots columns cell types.* spot_clusters: datafream spot group information.* like *data used CARD BayesSpace.","code":"data(spot_celltype) data(spot_clusters) head(spot_celltype)       Acinar_cells Ductal_cells Cancer_clone_A Cancer_clone_B         DCs 10x10 5.838572e-02    0.2349066   1.365076e-03   3.892868e-04 0.165860789 10x13 4.807943e-05    0.9984677   1.654640e-06   9.032885e-06 0.001244634 10x14 4.701190e-02    0.8373601   4.846860e-03   9.009235e-04 0.003541947 10x15 5.047613e-02    0.8020465   1.911570e-04   3.325224e-02 0.084113110 10x16 4.694120e-03    0.9718078   1.719378e-06   6.266388e-04 0.007665514 10x17 6.850619e-02    0.7737652   1.034929e-02   5.242836e-02 0.030090839         Tuft_cells         pDCs Endocrine_cells Endothelial_cells  Macrophages 10x10 1.149557e-02 5.750904e-05    3.794494e-03      1.554314e-01 7.575614e-02 10x13 1.411944e-04 2.179189e-08    2.791803e-08      2.522234e-08 4.952721e-05 10x14 2.430843e-05 6.745099e-05    7.014669e-08      9.208190e-03 3.539390e-02 10x15 3.087975e-07 2.387285e-04    1.660241e-07      3.787078e-04 1.868701e-02 10x16 2.859347e-07 1.835252e-04    9.321908e-09      1.535896e-04 2.258778e-05 10x17 7.639672e-04 1.963630e-04    1.888457e-04      2.610257e-03 1.254141e-03         Mast_cells T_cells_._NK_cells    Monocytes         RBCs  Fibroblasts 10x10 1.335059e-07       1.419896e-05 6.324585e-05 6.935704e-08 2.924798e-01 10x13 2.560977e-08       8.100230e-10 2.999011e-05 4.812122e-06 3.255235e-06 10x14 7.319528e-06       2.780869e-06 8.047062e-04 7.357054e-06 6.082224e-02 10x15 9.115675e-07       2.629728e-06 4.568320e-04 2.846073e-05 1.012715e-02 10x16 6.924793e-07       2.044994e-05 1.654387e-06 1.444002e-09 1.482138e-02 10x17 4.102771e-06       1.894866e-04 6.179414e-04 3.425166e-06 5.903159e-02 head(spot_clusters)       row col sizeFactor cluster.init spatial.cluster 10x10  10  10  4.7761108            1               2 10x13  10  13  1.0052199            2               2 10x14  10  14  0.8106812            2               2 10x15  10  15  0.4987377            2               2 10x16  10  16  0.4346143            2               2 10x17  10  17  0.7446991            2               2"},{"path":"/articles/SimplyUsage.html","id":"simply-usage","dir":"Articles","previous_headings":"","what":"Simply usage","title":"Simply usage","text":"Enter deconvolution result spot_celltype grouping information spot spot_clusters get result_list : CellTopic data frame can add Seurat object. domain_topic data frame, row CellTopic col domain. celltype_topic data frame, row celltype col CellTopic. Cell_topic vector topic chosen CellTopic. subsequent analyses, CellTopic celltype_topic mainly used. can use method show spatial distribution CellTopics. use show cell type score CellTopic.","code":"result_list <- CellTopic(   spot_celltype,   spot_clusters,   cluster = \"spatial.cluster\",   num_topics = 15 ) head(result_list[[\"CellTopic\"]])        CellTopic        CellTopic1        CellTopic2          CellTopic3 10x10 CellTopic2 0.488441042759359 0.624259237777972 0.00894909290161328 10x13 CellTopic2 0.488441042759359 0.624259237777972 0.00894909290161328 10x14 CellTopic2 0.488441042759359 0.624259237777972 0.00894909290161328 10x15 CellTopic2 0.488441042759359 0.624259237777972 0.00894909290161328 10x16 CellTopic2 0.488441042759359 0.624259237777972 0.00894909290161328 10x17 CellTopic2 0.488441042759359 0.624259237777972 0.00894909290161328               CellTopic4 10x10 0.0225236725913688 10x13 0.0225236725913688 10x14 0.0225236725913688 10x15 0.0225236725913688 10x16 0.0225236725913688 10x17 0.0225236725913688 # library(Seurat) # st_obj is a seurat object # st_obj <- AddMetaData(st_obj, result_list[[\"CellTopic\"]]) # SpatialDimPlot(st_obj, group.by = \"CellTopic\") head(result_list[[\"celltype_topic\"]])                CellTopic1 CellTopic2   CellTopic3  CellTopic4 Acinar_cells   0.05338717 0.03328935 5.233687e-02 0.171658099 Ductal_cells   0.12028057 0.14460117 4.655737e-06 0.006849717 Cancer_clone_A 0.02757192 0.01833829 1.822694e-01 0.012461637 Cancer_clone_B 0.02042047 0.01336746 1.710831e-01 0.003014254 DCs            0.07513535 0.06655371 2.530777e-02 0.132506711 Tuft_cells     0.06494618 0.04658163 4.832354e-02 0.165805335 library(ggplot2) plot_data <- result_list[[\"celltype_topic\"]] plot_data$CellType <- rownames(plot_data) ggplot(plot_data,         aes(x = reorder(CellType, CellTopic1, decreasing = TRUE), y = CellTopic1)) +   geom_bar(aes(fill = CellType), stat = \"identity\", width = 0.7) +   xlab(\"CellType\") +   theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))"},{"path":"/articles/SimplyUsage.html","id":"optional-parameters","dir":"Articles","previous_headings":"","what":"Optional parameters","title":"Simply usage","text":"recommend value num_topics generally slightly larger group number spot. larger percent, dependent results deconvolution. recommend using value 0.5-0.9.","code":"result_list <- CellTopic(   spot_celltype,   spot_clusters,   cluster = \"spatial.cluster\",   num_topics = 13,   percent = 0.7 )"},{"path":"/articles/SimplyUsage.html","id":"another-strategy","dir":"Articles","previous_headings":"","what":"Another strategy","title":"Simply usage","text":"want focus less percentages information carried single topic, can use Binarization = TRUE .","code":"result_list <- CellTopic(   spot_celltype,   spot_clusters,   cluster = \"spatial.cluster\",   num_topics = 13,   Binarization = TRUE ) plot_data <- result_list[[\"celltype_topic\"]] plot_data$CellType <- rownames(plot_data) ggplot(plot_data,         aes(x = reorder(CellType, CellTopic1, decreasing = TRUE), y = CellTopic1)) +   geom_bar(aes(fill = CellType), stat = \"identity\", width = 0.7) +   xlab(\"CellType\") +   theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))"},{"path":"/articles/SimplyUsage.html","id":"meta-topic","dir":"Articles","previous_headings":"","what":"Meta Topic","title":"Simply usage","text":"want explore different spatial domains based cell type division CellTopic, provide simple clustering option, meta.cell = TRUE. k integer much MetaTopic choose. method agglomeration method used.","code":"result_list <- CellTopic(   spot_celltype,   spot_clusters,   cluster = \"spatial.cluster\",   num_topics = 13,   percent = 0.7,   meta.cell = TRUE,   k = 3 ) head(result_list[[\"MetaTopic\"]])            MetaCluster CellTopic1           1 CellTopic2           1 CellTopic3           2 CellTopic4           3"},{"path":"/articles/Spatial_expansion.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"Spatial expansion","text":"","code":"my_colors <- c(\"#66b803\", \"#E5AA9B\", \"#FABD3E\", \"#2B8CBE\", \"#DE77AE\", \"#9970AB\", \"gray\", \"#D5E4A2\", \"#71D0F5\", \"#B1746F\", \"#ADE2D0\", \"#20DE8BFF\", \"#CCDE8BFF\", \"#FFDE8BFF\", \"#FFA88BFF\", \"#FF6A8BFF\") load(\"vignette_data/HCC_1L_obj.rda\") load(\"vignette_data/HCC_1L_spot_celltype.rda\")"},{"path":"/articles/Spatial_expansion.html","id":"spatopic","dir":"Articles","previous_headings":"","what":"SpaTopic","title":"Spatial expansion","text":"first use SpaTopic get CellTopic spatial domain.","code":"HCC_1L_obj <- RunPCA(HCC_1L_obj, assay = \"SCT\", verbose = FALSE) HCC_1L_obj <- FindNeighbors(HCC_1L_obj, reduction = \"pca\", dims = 1:30) HCC_1L_obj <- FindClusters(HCC_1L_obj, resolution = 1.5) HCC_1L_obj <- RunUMAP(HCC_1L_obj, reduction = \"pca\", dims = 1:30) HCC_1L_spot_clusters <- HCC_1L_obj@meta.data[\"seurat_clusters\"] result_list <- CellTopic(   HCC_1L_spot_celltype,   HCC_1L_spot_clusters,   cluster = \"seurat_clusters\",   num_topics = 10,   percent = 0.7 ) HCC_1L_obj <- AddMetaData(HCC_1L_obj, result_list[[\"CellTopic\"]]) SpatialDimPlot(HCC_1L_obj, group.by = \"CellTopic\", image.alpha = 0, pt.size.factor = 2.2) + scale_fill_manual(values = my_colors) Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck  Number of nodes: 2791 Number of edges: 103726  Running Louvain algorithm... Maximum modularity in 10 random starts: 0.7420 Number of communities: 16 Elapsed time: 0 seconds"},{"path":"/articles/Spatial_expansion.html","id":"spatial-expansion","dir":"Articles","previous_headings":"","what":"Spatial expansion","title":"Spatial expansion","text":"Spatial_expansion divides buffers angles specified spatial domain. worth noting method applicable SpaTopic, also arbitrary spatial partitions certain continuity. divide buffers angles spatial domain tumor boundary specifying CellTopic column Seurat@meta.data, CellTopic8 .  set edge.plot = TRUE, function draw reference plot representing specified spatial domain divide. can obtain appropriate spatial domain divide modifying alpha parameter alpha-shape calculation. can check relevant parameter settings Seurat@misc reference adjustments get appropriate spatial domain divide setting alpha = 280.  can use SpatialFeaturePlot Seurat show buffer divide spatial domain.  hand, can increase decrease width buffers setting distance .","code":"HCC_1L_obj <- Spatial_expansion(HCC_1L_obj,     CellTopic = c(\"CellTopic8\"),     meta.col = \"CellTopic\",     type = \"Hexagon\",     edge.plot = TRUE ) Use the low resolution image The type of data is Hexagon  The alpha value of alpha-shape method is 232  The distance of expansion is 200  The expansion of the data is added to the Seurat@meta.data and the message is added to Seurat@misc HCC_1L_obj@misc$expansion$CellTopic8[1:5] $distance [1] 200  $alpha [1] 232  $type [1] \"Hexagon\"  $image [1] \"lowres\"  $image.factor [1] 0.02920561 HCC_1L_obj <- Spatial_expansion(HCC_1L_obj,     CellTopic = c(\"CellTopic8\"),     meta.col = \"CellTopic\",     alpha = 280,     type = \"Hexagon\",     edge.plot = TRUE ) Use the low resolution image The type of data is Hexagon  The alpha value of alpha-shape method is 280  The distance of expansion is 200  The expansion of the data is added to the Seurat@meta.data and the message is added to Seurat@misc SpatialFeaturePlot(HCC_1L_obj, features = \"expansion_CellTopic8\", pt.size.factor = 2.2) HCC_1L_obj_1 <- Spatial_expansion(HCC_1L_obj,     CellTopic = c(\"CellTopic8\"),     meta.col = \"CellTopic\",     distance = 800,     alpha = 280,     type = \"Hexagon\",     edge.plot = FALSE ) SpatialFeaturePlot(HCC_1L_obj_1, features = \"expansion_CellTopic8\", pt.size.factor = 2.2) Use the low resolution image The type of data is Hexagon  The alpha value of alpha-shape method is 280  The distance of expansion is 800  The expansion of the data is added to the Seurat@meta.data and the message is added to Seurat@misc"},{"path":"/articles/Spatial_expansion.html","id":"angle","dir":"Articles","previous_headings":"Spatial expansion","what":"Angle","title":"Spatial expansion","text":"Spatial_expansion creates buffer information Seurat@meta.data, also angle information. regard geometric center spatial domain center, left side spatial domain starting point ending point circle.","code":"SpatialFeaturePlot(HCC_1L_obj, features = \"angle_CellTopic8\", pt.size.factor = 2.2)"},{"path":"/articles/Spatial_expansion.html","id":"gene-plot","dir":"Articles","previous_headings":"","what":"Gene plot","title":"Spatial expansion","text":"dividing spatial domain can use Expansion_gene_plot show gene expression changes buffers different angles. set angle = 90, parts = 2 get gene expression sides tumor boundary.  method consistent across different angles, shown dividing spatial domain four sections starting 50 degrees.  need plot data analysis re-plotting, can set plot = FALSE obtain expression genes buffers different angles.","code":"Expansion_gene_plot(HCC_1L_obj,     CellTopic = c(\"CellTopic8\"),     gene = c(\"ACTA2\", \"C11orf96\", \"CALD1\", \"COL1A2\", \"CSRP1\", \"CTGF\", \"FLNA\", \"IGFBP7\", \"MYH11\", \"MYL9\", \"PPP1R14A\", \"TAGLN\", \"TPM2\"),     meta.col = \"CellTopic\", angle = 90, parts = 2, plot = TRUE, cols = my_colors ) Expansion_gene_plot(HCC_1L_obj,     CellTopic = c(\"CellTopic8\"),     gene = c(\"ACTA2\", \"C11orf96\", \"COL1A2\", \"CSRP1\"),     meta.col = \"CellTopic\", angle = 50, parts = 4, plot = TRUE, cols = my_colors )"},{"path":"/articles/SpaTopic_workflow.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"SpaTopic workflow","text":"","code":"library(SpaTopic) library(ggplot2) library(cowplot) library(pheatmap) my_colors <- c(\"#66b803\", \"#E5AA9B\", \"#FABD3E\", \"#2B8CBE\", \"#DE77AE\", \"#9970AB\", \"gray\", \"#D5E4A2\", \"#71D0F5\", \"#B1746F\", \"#ADE2D0\", \"#20DE8BFF\", \"#CCDE8BFF\", \"#FFDE8BFF\", \"#FFA88BFF\") data(spot_celltype) data(spot_clusters) load(\"vignette_data/PDAC_obj.rda\")"},{"path":"/articles/SpaTopic_workflow.html","id":"spatopic-workflow","dir":"Articles","previous_headings":"","what":"SpaTopic workflow","title":"SpaTopic workflow","text":"workflow SpaTopic detailed , including Kolmogorov-Smirnov (KS) test, Latent Dirichlet Allocation (LDA), FindCellTopic.","code":""},{"path":"/articles/SpaTopic_workflow.html","id":"ks-test","dir":"Articles","previous_headings":"SpaTopic workflow","what":"KS test","title":"SpaTopic workflow","text":"First, use KS test calculate specificity score cell types across different spot domains.","code":"domain_cellytpe <- ksTest(spot_celltype, spot_clusters, cluster = \"spatial.cluster\") pheatmap(domain_cellytpe, cluster_rows = FALSE, cluster_cols = FALSE,          cellwidth = 20, cellheight = 20)"},{"path":"/articles/SpaTopic_workflow.html","id":"lda-model","dir":"Articles","previous_headings":"SpaTopic workflow","what":"LDA model","title":"SpaTopic workflow","text":"can get topic can represent spatial domain LDA model. Show topic LDA model.","code":"topic_list <- MatrixFactorization(domain_cellytpe, num_topics = 13) dt_topic_data <- topic_list[[\"domain_topic\"]] ct_topic_data <- topic_list[[\"celltype_topic\"]] # plot prepare PDAC_obj <- AddMetaData(PDAC_obj, spot_clusters[\"spatial.cluster\"]) df <- as.data.frame(t(dt_topic_data[,match(PDAC_obj$spatial.cluster,gsub(\"spot_domain_\", \"\", colnames(dt_topic_data)))])) rownames(df) <- colnames(PDAC_obj) PDAC_obj <- AddMetaData(PDAC_obj, df) colors_num <- ncol(dt_topic_data) topics <- colnames(ct_topic_data) bar_plot_data <- ct_topic_data bar_plot_data$CellType <- rownames(ct_topic_data) plot_list <- list() for (i in seq_along(topics)){   p <- SpatialPlot(PDAC_obj, group.by = topics[i], pt.size.factor = 8, stroke = NA) + scale_fill_manual(values = rev(c(\"#CB181D\", \"#FB6A4A\", \"#FCAE91\", \"#FEE5D9\"))) + NoAxes() + NoLegend()   bar_plot <- ggplot(bar_plot_data, aes(x = reorder(CellType, !!sym(topics[i]), decreasing = TRUE), y = .data[[topics[i]]])) +     geom_bar(aes(fill = CellType), stat='identity', width = 0.7) +     xlab('CellType') +     scale_fill_manual(values = my_colors) +     theme_minimal() + NoGrid() +      theme(legend.key.size = unit(0.3, \"cm\"),            legend.position = \"none\",           axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0, size = 8))   plot_list[[i]] <- plot_grid(plotlist = list(p, bar_plot), ncol = 1) } plot_grid(plotlist = plot_list, ncol = 3)"},{"path":"/articles/SpaTopic_workflow.html","id":"findcelltopic","dir":"Articles","previous_headings":"SpaTopic workflow","what":"FindCellTopic","title":"SpaTopic workflow","text":"assign spot domain one specific topics (termed ‘CellTopics’)  use Binarization = TRUE, returns result form, focus less percentages information carried single topic.","code":"result_list <- FindCellTopic(dt_topic_data, ct_topic_data, spot_clusters, cluster = \"spatial.cluster\", percent = 0.7) PDAC_obj <- AddMetaData(PDAC_obj, result_list[[\"CellTopic\"]]) SpatialDimPlot(PDAC_obj, label = FALSE, group.by = \"CellTopic\", pt.size.factor = 8) + scale_fill_manual(values = my_colors) + coord_flip()+ scale_y_reverse() pheatmap(result_list[[\"celltype_topic\"]],                 cluster_rows = FALSE,                 cellwidth = 20, cellheight = 20) # Not run, just show result_list <- FindCellTopic(dt_topic_data, ct_topic_data, spot_clusters, cluster = \"spatial.cluster\",Binarization = TRUE)"},{"path":"/articles/SpaTopic_workflow.html","id":"plot","dir":"Articles","previous_headings":"SpaTopic workflow","what":"Plot","title":"SpaTopic workflow","text":"CellTopic_plot can used display spatial location cell types one CellTopics time.","code":"CellTopic_plot(PDAC_obj,                 celltype_topic = result_list[[\"celltype_topic\"]],                 cols.highlight = c(\"#DE2D26\", \"#FEE0D2\"),                cols.celltype = my_colors,                 pt.size.factor = 8)"},{"path":"/articles/web_only/Example Analysis with SpaTopic.html","id":"load-data","dir":"Articles > Web_only","previous_headings":"","what":"Load data","title":"Example Analysis with SpaTopic","text":"","code":"library(Seurat) library(SpaTopic) library(ggplot2) library(cowplot) library(patchwork) library(pheatmap) my_colors <- c(\"#66b803\", \"#E5AA9B\", \"#FABD3E\", \"#2B8CBE\", \"#DE77AE\", \"#9970AB\", \"gray\", \"#D5E4A2\", \"#71D0F5\", \"#B1746F\", \"#ADE2D0\", \"#20DE8BFF\", \"#CCDE8BFF\", \"#FFDE8BFF\", \"#FFA88BFF\") load(\"D:/code/SpaTopic/vignettes/web_only/PDAC_obj.rda\") data(spot_celltype) data(spot_clusters) PDAC_obj <- AddMetaData(PDAC_obj, spot_clusters[\"spatial.cluster\"]) Idents(PDAC_obj) <- PDAC_obj@meta.data[\"spatial.cluster\"]"},{"path":"/articles/web_only/Example Analysis with SpaTopic.html","id":"about-data","dir":"Articles > Web_only","previous_headings":"","what":"About data","title":"Example Analysis with SpaTopic","text":"data used can obtained GEO, divided 4 spatial domains according clustering.","code":"DimPlot(PDAC_obj, group.by = 'spatial.cluster', reduction = \"umap\",cols = my_colors) SpatialDimPlot(PDAC_obj, label = FALSE, group.by = \"spatial.cluster\", pt.size.factor = 8) + scale_fill_manual(values = my_colors) + coord_flip()+ scale_y_reverse()"},{"path":[]},{"path":"/articles/web_only/Example Analysis with SpaTopic.html","id":"ks-test","dir":"Articles > Web_only","previous_headings":"","what":"KS test","title":"Example Analysis with SpaTopic","text":"First, use kstest calculate specificity score cell types across different spot clusters.","code":"domain_cellytpe <- ksTest(spot_celltype, spot_clusters, cluster = \"spatial.cluster\") pheatmap(domain_cellytpe, cluster_rows = FALSE, cluster_cols = FALSE,          cellwidth = 20, cellheight = 20)"},{"path":"/articles/web_only/Example Analysis with SpaTopic.html","id":"lda","dir":"Articles > Web_only","previous_headings":"","what":"LDA","title":"Example Analysis with SpaTopic","text":"can get topic can represent spatial domain Latent Dirichlet Allocation (LDA).","code":"topic_list <- MatrixFactorization(domain_cellytpe, num_topics = 13) dt_topic_data <- topic_list[[\"domain_topic\"]] ct_topic_data <- topic_list[[\"celltype_topic\"]] # plot prepare df <- as.data.frame(t(dt_topic_data[,match(PDAC_obj$spatial.cluster,gsub(\"spot_domain_\", \"\", colnames(dt_topic_data)))])) rownames(df) <- colnames(PDAC_obj) PDAC_obj <- AddMetaData(PDAC_obj, df) colors_num <- ncol(dt_topic_data) topics <- colnames(ct_topic_data) bar_plot_data <- ct_topic_data bar_plot_data$CellType <- rownames(ct_topic_data) plot_list <- list() for (i in seq_along(topics)){   p <- SpatialPlot(PDAC_obj, group.by = topics[i], pt.size.factor = 8, stroke = NA) + scale_fill_manual(values = rev(pals::brewer.spectral(colors_num))) + NoAxes() + NoLegend() + coord_flip() + scale_y_reverse()   bar_plot <- ggplot(bar_plot_data, aes(x = reorder(CellType, !!sym(topics[i]), decreasing = TRUE), y = .data[[topics[i]]])) +     geom_bar(aes(fill = CellType), stat='identity', width = 0.7) +     xlab('CellType') +     scale_fill_manual(values = my_colors) +     theme_minimal() + NoGrid() +      theme(legend.key.size = unit(0.3, \"cm\"),            legend.position = \"none\",           axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 8))   plot_list[[i]] <- ggdraw() +      draw_plot(p, 0, 0.2, 1, 1, scale = 0.7) +      draw_plot(bar_plot, 0.1, 0, 0.7, 0.5, scale = 1) } # show all plots"},{"path":"/articles/web_only/Example Analysis with SpaTopic.html","id":"celltopic","dir":"Articles > Web_only","previous_headings":"","what":"CellTopic","title":"Example Analysis with SpaTopic","text":"order assign spatial cluster one specific topics, try find CellTopic spot cluster.","code":"result_list <- FindCellTopic(dt_topic_data, ct_topic_data, spot_clusters, cluster = \"spatial.cluster\", percent = 0.7) PDAC_obj <- AddMetaData(PDAC_obj, result_list[[\"CellTopic\"]]) SpatialDimPlot(PDAC_obj, label = FALSE, group.by = \"CellTopic\", pt.size.factor = 8) + scale_fill_manual(values = my_colors) + coord_flip()+ scale_y_reverse() pheatmap(result_list[[\"celltype_topic\"]],                 cluster_rows = FALSE,                 cellwidth = 20, cellheight = 20)"},{"path":"/articles/web_only/Example Analysis with SpaTopic.html","id":"cell-cell-communication","dir":"Articles > Web_only","previous_headings":"","what":"Cell-Cell communication","title":"Example Analysis with SpaTopic","text":"Use CellChat Computes communication spatial domains. Communication different spatial domains perspective pathway.","code":"library(CellChat) # Create cellchat object data.input <- GetAssayData(PDAC_obj, assay = \"Spatial\", slot = \"data\") identity = data.frame(group =PDAC_obj$CellTopic, row.names = names(PDAC_obj$CellTopic)) cellchat <- createCellChat(object = data.input, meta = identity, group.by = \"group\") ## [1] \"Create a CellChat object from a data matrix\" ## Set cell identities for the new CellChat object  ## The cell groups used for CellChat analysis are  CellTopic1 CellTopic2 CellTopic3 CellTopic4 # Selective ligand receptor database CellChatDB <- CellChatDB.human cellchat@DB <- CellChatDB cellchat <- subsetData(cellchat) # Calculation # future::plan(\"multiprocess\", workers = 10) cellchat <- identifyOverExpressedGenes(cellchat) cellchat <- identifyOverExpressedInteractions(cellchat) cellchat <- projectData(cellchat, PPI.human) #cellchat <- filterCommunication(cellchat, min.cells = 10) # Do not filter spot cellchat <- computeCommunProb(cellchat, raw.use = FALSE, population.size = TRUE) ## triMean is used for calculating the average gene expression per cell group.  ## [1] \">>> Run CellChat on sc/snRNA-seq data <<< [2024-02-09 13:18:50.511958]\" ## [1] \">>> CellChat inference is done. Parameter values are stored in `object@options$parameter` <<< [2024-02-09 13:20:00.074937]\" cellchat <- computeCommunProbPathway(cellchat) df.net <- subsetCommunication(cellchat) df.netp <- subsetCommunication(cellchat, slot.name = \"netP\") df.netp$sTot <- paste0(df.netp$source, \" -> \", df.netp$target) df.netp <- subset(df.netp, sTot %in% c(\"CellTopic1 -> CellTopic1\",\"CellTopic1 -> CellTopic2\",\"CellTopic1 -> CellTopic3\",\"CellTopic1 -> CellTopic4\",\"CellTopic2 -> CellTopic1\",\"CellTopic3 -> CellTopic1\",\"CellTopic4 -> CellTopic1\",\"CellTopic2 -> CellTopic4\",\"CellTopic4 -> CellTopic2\",\"CellTopic2 -> CellTopic2\",\"CellTopic3 -> CellTopic3\",\"CellTopic4 -> CellTopic4\")) df.netp$sTot <- factor(df.netp$sTot,levels = c(\"CellTopic2 -> CellTopic4\",\"CellTopic4 -> CellTopic2\",\"CellTopic1 -> CellTopic2\",\"CellTopic2 -> CellTopic1\",\"CellTopic1 -> CellTopic3\",\"CellTopic3 -> CellTopic1\",\"CellTopic1 -> CellTopic4\",\"CellTopic4 -> CellTopic1\",\"CellTopic1 -> CellTopic1\",\"CellTopic2 -> CellTopic2\",\"CellTopic3 -> CellTopic3\",\"CellTopic4 -> CellTopic4\")) df.netp <- rbind(df.netp, data.frame(     source = c(NA,NA,NA),      target = c(NA,NA,NA),      pathway_name = c(\"VTN\",\"VTN\",\"VTN\"), # It's just for showing the parts without communication, \"VTN\" has no particularity.     prob = c(0,0,0),      pval = c(NA,NA,NA),      sTot = c(\"CellTopic1 -> CellTopic2\",\"CellTopic2 -> CellTopic1\",\"CellTopic3 -> CellTopic1\"))) library('RColorBrewer') ggplot(df.netp, aes(x=sTot, y=pathway_name)) +      geom_point(aes(size=pval, color=log10(prob))) +      scale_size(range = c(4, 2), breaks = c(0.01,max(df.netp$pval[!is.na(df.netp$pval)])), labels = c(\"p<0.01\",\"0.01<p<0.05\")) +      scale_colour_distiller(palette=\"Spectral\", labels = c(\"low\",\"high\"), breaks = c(log10(min(df.netp$prob[df.netp$prob!=0])),log10(max(df.netp$prob)))) +     theme_bw() +     theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),     axis.title.x = element_blank(),     axis.title.y = element_blank()) +     labs(size = \"p-value\", color = \"Commun.prob\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yuelei Zhang. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"\"zyll1997@126.com\") c=, person, person, person) (2024). SpaTopic: SpaTopic: Statistical Learning Framework Exploring Tumor Spatial Architecture Spatially Resolved Transcriptomic Data. R package version 0.1.0, https://github.com/compbioNJU/SpaTopic.","code":"@Manual{,   title = {SpaTopic: SpaTopic: A Statistical Learning Framework for Exploring Tumor Spatial Architecture from Spatially Resolved Transcriptomic Data},   author = {c,email = \"zyll1997@126.com\") and {person} and {person} and {person)}},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/compbioNJU/SpaTopic}, }"},{"path":[]},{"path":"/index.html","id":"a-statistical-learning-framework-for-exploring-tumor-spatial-architecture-from-spatially-resolved-transcriptomic-data","dir":"","previous_headings":"","what":"A Statistical Learning Framework for Exploring Tumor Spatial Architecture from Spatially Resolved Transcriptomic Data.","title":"SpaTopic: A Statistical Learning Framework for Exploring Tumor Spatial Architecture from Spatially Resolved Transcriptomic Data","text":", introduce SpaTopic, versatile statistical learning framework harmonizes spatial clustering cell-type deconvolution integrating single-cell transcriptomics SRT data. objective SpaTopic identify spatial clusters spots within SRT data, characterized homogenous gene expression cell-type organization. unique cluster spots viewed distinct spatial domain, presenting discernible patterns set apart clusters. SpaTopic significantly aids characterization spatial domains, capitalising contributions corresponding cell-type topics. enables quantitative comparison spatial domains identification spatial regions prevalent across various SRT datasets. SpaTopic implemented open-source R package, freely available https://github.com/compbioNJU/SpaTopic.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"SpaTopic: A Statistical Learning Framework for Exploring Tumor Spatial Architecture from Spatially Resolved Transcriptomic Data","text":"SpaTopic implemented R package, can installed GitHub.","code":""},{"path":"/index.html","id":"dependencies","dir":"","previous_headings":"Installation","what":"Dependencies","title":"SpaTopic: A Statistical Learning Framework for Exploring Tumor Spatial Architecture from Spatially Resolved Transcriptomic Data","text":"R (≥ 3.5.0) testthat (>= 3.0.0) R packages: modeltools, slam, stats, topicmodels ** Install devtools necessary ** Install SpaTopic Load package","code":"install.packages('devtools') devtools::install_github('compbioNJU/SpaTopic') library(SpaTopic)"},{"path":"/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"SpaTopic: A Statistical Learning Framework for Exploring Tumor Spatial Architecture from Spatially Resolved Transcriptomic Data","text":"feedback, bug reports suggestions warmly welcomed! Please make sure raise issues detailed reproducible exmple also please provide output sessionInfo() R!","code":""},{"path":"/index.html","id":"how-to-use-spatopic","dir":"","previous_headings":"","what":"How to use SpaTopic","title":"SpaTopic: A Statistical Learning Framework for Exploring Tumor Spatial Architecture from Spatially Resolved Transcriptomic Data","text":"tutorial example analysis SpaTopic human pancreatic ductal adenocarcinomas data Moncada et al, 2020. runing tutorial, make sure SpaTopic package installed. Installation instructions see Installation. See https://compbioNJU.github.io/SpaTopic/.","code":"library(SpaTopic)"},{"path":"/index.html","id":"load-the-data","dir":"","previous_headings":"How to use SpaTopic","what":"load the data","title":"SpaTopic: A Statistical Learning Framework for Exploring Tumor Spatial Architecture from Spatially Resolved Transcriptomic Data","text":"","code":"load(\"data/spot_clusters.rda\") load(\"data/spot_celltype.rda\") spot_clusters[1:5,1:5]       row col sizeFactor cluster.init spatial.cluster 10x10  10  10  4.7761108            1               2 10x13  10  13  1.0052199            2               2 10x14  10  14  0.8106812            2               2 10x15  10  15  0.4987377            2               2 10x16  10  16  0.4346143            2               2  spot_celltype[1:5,1:5]       Acinar_cells Ductal_cells Cancer_clone_A Cancer_clone_B         DCs 10x10 5.838572e-02    0.2349066   1.365076e-03   3.892868e-04 0.165860789 10x13 4.807943e-05    0.9984677   1.654640e-06   9.032885e-06 0.001244634 10x14 4.701190e-02    0.8373601   4.846860e-03   9.009235e-04 0.003541947 10x15 5.047613e-02    0.8020465   1.911570e-04   3.325224e-02 0.084113110 10x16 4.694120e-03    0.9718078   1.719378e-06   6.266388e-04 0.007665514"},{"path":"/index.html","id":"use-spatopic-to-the-spot_celltype-and-spot_clusters","dir":"","previous_headings":"How to use SpaTopic","what":"use SpaTopic to the spot_celltype and spot_clusters","title":"SpaTopic: A Statistical Learning Framework for Exploring Tumor Spatial Architecture from Spatially Resolved Transcriptomic Data","text":"","code":"#result_list: A list with three data frame and one vector.  #MetaTopic is a data frame which can be add to a Seurat object.  #The domain_topic is a data frame, row is CellTopic. and col is domain. #The celltype_topic is a data frame, row is celltype and col is CellTopic.  #Cell_topic is a vector of which topic be chosen in each CellTopic.  #If meta.cell = TRUE, one more result will be given in result list, MetaTopic is a data frame of the cluster result of CellTopic.  result_list <- CellTopic(spot_celltype,spot_clusters,cluster = \"spatial.cluster\", num_topics = 13,percent = 0.7,             Binarization = FALSE, meta.cell = FALSE, k = NULL) #show the result head(result_list[[\"CellTopic\"]])        CellTopic        CellTopic1        CellTopic2         CellTopic3         CellTopic4 10x10 CellTopic2 0.577382618544802 0.787303032098654 0.0080170243865711 0.0853445821596965 10x13 CellTopic2 0.577382618544802 0.787303032098654 0.0080170243865711 0.0853445821596965 10x14 CellTopic2 0.577382618544802 0.787303032098654 0.0080170243865711 0.0853445821596965 10x15 CellTopic2 0.577382618544802 0.787303032098654 0.0080170243865711 0.0853445821596965 10x16 CellTopic2 0.577382618544802 0.787303032098654 0.0080170243865711 0.0853445821596965 10x17 CellTopic2 0.577382618544802 0.787303032098654 0.0080170243865711 0.0853445821596965  head(result_list[[\"domain_topic\"]])            spot_domain_1 spot_domain_2 spot_domain_3 spot_domain_4 CellTopic1    0.78207686   0.577382619   0.174953872    0.10799194 CellTopic2    0.44211741   0.787303032   0.007438506    0.06603564 CellTopic3    0.12712585   0.008017024   0.787181571    0.03422577 CellTopic4    0.05105707   0.085344582   0.018005238    0.78840065  head(result_list[[\"celltype_topic\"]])                CellTopic1 CellTopic2   CellTopic3 CellTopic4 Acinar_cells   0.04503436 0.03515437 5.404895e-02 0.17033144 Ductal_cells   0.11062714 0.14213899 3.273553e-06 0.02809054 Cancer_clone_A 0.03090381 0.02157599 1.770954e-01 0.01540925 Cancer_clone_B 0.02943409 0.01671419 1.662732e-01 0.01086386 DCs            0.07268275 0.06557971 2.767503e-02 0.14179855 Tuft_cells     0.06113322 0.04374492 5.155769e-02 0.14100323  head(result_list[[\"Cell_topic\"]])     CellTopic1     CellTopic2     CellTopic3     CellTopic4  \"3_11_4_5_7_2\"   \"2_8_1_11_3\"         \"9_12\"        \"13_10\""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 SpaTopic authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/CellTopic.html","id":null,"dir":"Reference","previous_headings":"","what":"CellTopic — CellTopic","title":"CellTopic — CellTopic","text":"deconvolution clustering information, SpaTopic obtains CellTopics representing spatial domains.","code":""},{"path":"/reference/CellTopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CellTopic — CellTopic","text":"","code":"CellTopic(   spot_celltype,   spot_clusters,   cluster = NULL,   num_topics = NULL,   percent = NULL,   Binarization = FALSE,   meta.cell = FALSE,   k = NULL,   method = \"complete\" )"},{"path":"/reference/CellTopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CellTopic — CellTopic","text":"spot_celltype data frame result deconvolution, row spot, col celltype. spot_clusters data frame contains clustering information spots, row spots. cluster character. Use first column spot_clusters column name NULL. provide column names represent clustering information spot_clusters. num_topics integer vector integer. number topics. default NULL, find best number topics default. vector integer, find best number topics given range. percent numeric 0 1. percent topics. Default 0.6. Binarization Logical indicating choose one topic CellTopic. Default FALSE. meta.cell Logical indicating return MetaTopic, data frame cluster result CellTopic. k integer much MetaTopic choose. meta.cell = TRUE, k Requested given. Default 4. method See hclust.","code":""},{"path":"/reference/CellTopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CellTopic — CellTopic","text":"list three data frame one vector. \"CellTopic\" data frame can add Seurat object. \"domain_topic\" data frame, row CellTopic col domain. \"celltype_topic\" data frame, row celltype col CellTopic. \"Cell_topic\" vector topic chosen CellTopic. meta.cell = TRUE, \"MetaTopic\" given, data frame cluster result CellTopic.","code":""},{"path":"/reference/CellTopic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CellTopic — CellTopic","text":"","code":"options (warn = -1) result_list <- CellTopic(spot_celltype, spot_clusters, cluster = \"spatial.cluster\", num_topics = 13, percent = 0.7, Binarization = FALSE, meta.cell = FALSE, k = NULL) head(result_list[[\"CellTopic\"]]) #>        CellTopic        CellTopic1        CellTopic2          CellTopic3 #> 10x10 CellTopic2 0.577382618544806 0.787303032098643 0.00801702438657219 #> 10x13 CellTopic2 0.577382618544806 0.787303032098643 0.00801702438657219 #> 10x14 CellTopic2 0.577382618544806 0.787303032098643 0.00801702438657219 #> 10x15 CellTopic2 0.577382618544806 0.787303032098643 0.00801702438657219 #> 10x16 CellTopic2 0.577382618544806 0.787303032098643 0.00801702438657219 #> 10x17 CellTopic2 0.577382618544806 0.787303032098643 0.00801702438657219 #>               CellTopic4 #> 10x10 0.0853445821596951 #> 10x13 0.0853445821596951 #> 10x14 0.0853445821596951 #> 10x15 0.0853445821596951 #> 10x16 0.0853445821596951 #> 10x17 0.0853445821596951 print(result_list[[\"domain_topic\"]]) #>            spot_domain_1 spot_domain_2 spot_domain_3 spot_domain_4 #> CellTopic1    0.78207686   0.577382619   0.174953872    0.10799194 #> CellTopic2    0.44211741   0.787303032   0.007438506    0.06603564 #> CellTopic3    0.12712585   0.008017024   0.787181571    0.03422577 #> CellTopic4    0.05105707   0.085344582   0.018005238    0.78840065 print(result_list[[\"celltype_topic\"]]) #>                    CellTopic1 CellTopic2   CellTopic3  CellTopic4 #> Acinar_cells       0.04503436 0.03515437 5.404895e-02 0.170331437 #> Ductal_cells       0.11062714 0.14213899 3.273553e-06 0.028090541 #> Cancer_clone_A     0.03090381 0.02157599 1.770954e-01 0.015409246 #> Cancer_clone_B     0.02943409 0.01671419 1.662732e-01 0.010863856 #> DCs                0.07268275 0.06557971 2.767503e-02 0.141798548 #> Tuft_cells         0.06113322 0.04374492 5.155769e-02 0.141003229 #> pDCs               0.07777535 0.08179763 6.142109e-02 0.033754490 #> Endocrine_cells    0.07244471 0.06235805 3.860767e-02 0.144523396 #> Endothelial_cells  0.05015768 0.07488563 4.325394e-02 0.119765243 #> Macrophages        0.07516032 0.07263288 6.357115e-02 0.023052507 #> Mast_cells         0.09171737 0.06166093 5.590543e-02 0.053970823 #> T_cells_._NK_cells 0.08466616 0.06391425 4.966116e-02 0.020327972 #> Monocytes          0.07849903 0.09473090 5.823277e-02 0.056077913 #> RBCs               0.08112008 0.10899827 4.804330e-02 0.001741445 #> Fibroblasts        0.03864393 0.05411328 1.046500e-01 0.039289352 print(result_list[[\"Cell_topic\"]]) #>     CellTopic1     CellTopic2     CellTopic3     CellTopic4  #> \"3_11_4_5_7_2\"   \"2_8_1_11_3\"         \"9_12\"        \"13_10\""},{"path":"/reference/CellTopic_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"CellTopic Plot — CellTopic_plot","title":"CellTopic Plot — CellTopic_plot","text":"drawing function outputs CellTopic spatial distribution plot corresponding celltype barpolt.","code":""},{"path":"/reference/CellTopic_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CellTopic Plot — CellTopic_plot","text":"","code":"CellTopic_plot(   st_obj,   celltype_topic,   celltopic = colnames(celltype_topic),   highlight.circle = NULL,   cols.circle = \"black\",   cols.highlight = c(\"#DE2D26\", \"grey50\"),   cols.celltype = NULL,   plot.size = 7,   nrow = NULL,   ncol = NULL,   ... )"},{"path":"/reference/CellTopic_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CellTopic Plot — CellTopic_plot","text":"st_obj seurat object CellTopic meta data. celltype_topic data frame, row celltype col CellTopic. celltopic character CellTopic plot. highlight.circle character meta.data high light. Default NULL. cols.circle character circle's color. Default black. cols.highlight vector two character highlight spots' colors. cols.celltype vector character celltypes' colors. Default NULL. plot.size numeric plot's size. Default 7. nrow numeric rows plot grid. ncol numeric cols plot grid. ... Arguments passed methods.","code":""},{"path":"/reference/CellTopic_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CellTopic Plot — CellTopic_plot","text":"polt SpatialDimPlot celltype barpolt.","code":""},{"path":"/reference/Expansion_gene_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Expansion_gene_plot — Expansion_gene_plot","title":"Expansion_gene_plot — Expansion_gene_plot","text":"Show smooth plots genes function buffer distance different angles.","code":""},{"path":"/reference/Expansion_gene_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expansion_gene_plot — Expansion_gene_plot","text":"","code":"Expansion_gene_plot(   st_obj,   CellTopic,   gene,   meta.col = \"CellTopic\",   angle = 90,   parts = 1,   plot = TRUE,   cols = NULL )"},{"path":"/reference/Expansion_gene_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expansion_gene_plot — Expansion_gene_plot","text":"st_obj Seurat object. CellTopic character CellTopic chosen. gene vector contains one genes display meta.col character meta.data chosen. Default \"CellTopic\". angle numeric indicates starting angle. Default 90, means directly . parts number indicates angle needs divided several equal parts. plot Logical indicating display result plot just data plotting. Default TRUE. cols vector colors used plot.","code":""},{"path":"/reference/Expansion_gene_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expansion_gene_plot — Expansion_gene_plot","text":"plot = TRUE, return smooth plots genes function buffer distance different angles. plot = FALSE, return data plotting.","code":""},{"path":"/reference/FindCellTopic.html","id":null,"dir":"Reference","previous_headings":"","what":"FindCellTopic — FindCellTopic","title":"FindCellTopic — FindCellTopic","text":"Based results MatrixFactorization clustering information, CellTopics representing domain calculated.","code":""},{"path":"/reference/FindCellTopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FindCellTopic — FindCellTopic","text":"","code":"FindCellTopic(   dt_topic_data,   ct_topic_data,   spot_clusters,   cluster = NULL,   percent = NULL,   Binarization = FALSE )"},{"path":"/reference/FindCellTopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FindCellTopic — FindCellTopic","text":"dt_topic_data data frame, row topic col domain. result function MatrixFactorization. ct_topic_data data frame, row celltype col topic. result function MatrixFactorization. spot_clusters data frame contains clustering information spots, row spots. cluster character. Use first column spot_clusters column name NULL. provide column names represent clustering information spot_clusters. percent numeric 0 1. percent topics. Default 0.6. Binarization Logical indicating choose one topic CellTopic. Default FALSE.","code":""},{"path":"/reference/FindCellTopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FindCellTopic — FindCellTopic","text":"list three data frame one vector. \"CellTopic\" data frame can add Seurat object. \"domain_topic\" data frame, row CellTopic. col domain. \"celltype_topic\" data frame, row celltype col CellTopic. \"Cell_topic\" vector topic chosen CellTopic.","code":""},{"path":"/reference/ksTest.html","id":null,"dir":"Reference","previous_headings":"","what":"ksTest — ksTest","title":"ksTest — ksTest","text":"Kolmogorov-Smirnov (KS) test performed deconvolution results overall level cluster.","code":""},{"path":"/reference/ksTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ksTest — ksTest","text":"","code":"ksTest(spot_celltype, spot_clusters, cluster = NULL)"},{"path":"/reference/ksTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ksTest — ksTest","text":"spot_celltype data frame result deconvolution, row spot, col celltype. spot_clusters data frame contains clustering information spots, row spots. cluster character. Use first column spot_clusters column name NULL. provide column names represent clustering information spot_clusters.","code":""},{"path":"/reference/ksTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ksTest — ksTest","text":"data frame, row spot_domain, col celltype score.","code":""},{"path":"/reference/MatrixFactorization.html","id":null,"dir":"Reference","previous_headings":"","what":"MatrixFactorization — MatrixFactorization","title":"MatrixFactorization — MatrixFactorization","text":"Perform matrix factorization KS test results, see matrix factorization method LDA.","code":""},{"path":"/reference/MatrixFactorization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MatrixFactorization — MatrixFactorization","text":"","code":"MatrixFactorization(domain_cellytpe, num_topics = NULL)"},{"path":"/reference/MatrixFactorization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MatrixFactorization — MatrixFactorization","text":"domain_cellytpe data frame. result function ksTest. num_topics integer vector integer. number topics. find best number topics NULL. find best number topics given range vector integer. provide number integer.","code":""},{"path":"/reference/MatrixFactorization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MatrixFactorization — MatrixFactorization","text":"list two data frame. \"domain_topic\" data frame, row topic col domain. \"celltype_topic\" data frame, row celltype col topic.","code":""},{"path":"/reference/MetaTopic.html","id":null,"dir":"Reference","previous_headings":"","what":"MetaTopic — MetaTopic","title":"MetaTopic — MetaTopic","text":"Make MetaTopic CellTopic celltype scores.","code":""},{"path":"/reference/MetaTopic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaTopic — MetaTopic","text":"","code":"MetaTopic(ct_topic_data, k, method)"},{"path":"/reference/MetaTopic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaTopic — MetaTopic","text":"ct_topic_data data frame, row celltype col CellTopic. k integer number MetaTopics. method See hclust.","code":""},{"path":"/reference/MetaTopic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MetaTopic — MetaTopic","text":"data frame cluster result CellTopic.","code":""},{"path":"/reference/Spatial_expansion.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial_expansion — Spatial_expansion","title":"Spatial_expansion — Spatial_expansion","text":"Buffers angles dividing specified spatial domain","code":""},{"path":"/reference/Spatial_expansion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial_expansion — Spatial_expansion","text":"","code":"Spatial_expansion(   st_obj,   CellTopic,   meta.col = \"CellTopic\",   distance = NULL,   alpha = NULL,   type = c(\"Hexagon\", \"Square\"),   edge.plot = TRUE,   image.factor = \"lowres\" )"},{"path":"/reference/Spatial_expansion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial_expansion — Spatial_expansion","text":"st_obj Seurat object. CellTopic character CellTopic chosen. meta.col character meta.data chosen. Default \"CellTopic\". distance numeric. distance expansion. Default NULL, use nearest spot distance. alpha numeric used alpha-shape calculation. Default NULL, use nearest spot distance based data type. See also ashape. type default type = \"Hexagon\" data hexagonal spot arrangement. spot arrangement data square, set tpye = \"Square\". edge.plot Logical indicating display regional division plot CellTopic. Default TRUE. image.factor character resolution scale factor. Default \"lowres\".","code":""},{"path":"/reference/Spatial_expansion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial_expansion — Spatial_expansion","text":"Seurat object. expansion data added Seurat@meta.data message added Seurat@misc","code":""},{"path":"/reference/spot_celltype.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolution results of single-cell versus spatial transcriptome. — spot_celltype","title":"Deconvolution results of single-cell versus spatial transcriptome. — spot_celltype","text":"data frame cell type spot using CARD deconvolution method.","code":""},{"path":"/reference/spot_celltype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolution results of single-cell versus spatial transcriptome. — spot_celltype","text":"","code":"spot_celltype"},{"path":"/reference/spot_celltype.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Deconvolution results of single-cell versus spatial transcriptome. — spot_celltype","text":"data frame 428 rows 15 variables","code":""},{"path":"/reference/spot_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering results of the spatial transcriptome. — spot_clusters","title":"Clustering results of the spatial transcriptome. — spot_clusters","text":"data frame clustering result obtained BayesSpace.","code":""},{"path":"/reference/spot_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering results of the spatial transcriptome. — spot_clusters","text":"","code":"spot_clusters"},{"path":"/reference/spot_clusters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clustering results of the spatial transcriptome. — spot_clusters","text":"data frame 428 rows 5 variables: cluster.init cluster.init col col row row spatial.cluster clustering result sizeFactor sizeFactor","code":""}]
